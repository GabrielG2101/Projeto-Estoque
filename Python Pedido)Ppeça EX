import mysql.connector

# Conectando ao banco de dados
mydb = mysql.connector.connect(
  host="localhost",
  user="seu_usuario",
  password="sua_senha",
  database="Estoque"
)

# Criando um cursor
cursor = mydb.cursor()

# Função para listar peças disponíveis
def listar_pecas_disponiveis():
    cursor.execute("SELECT * FROM Peca")
    result = cursor.fetchall()
    print("Peças disponíveis:")
    for row in result:
        print(row[0], row[1], row[2], row[3], row[4])

# Função para adicionar peças ao carrinho
def adicionar_ao_carrinho(id_usuario):
    listar_pecas_disponiveis()
    id_peca = int(input("Digite o ID da peça que deseja adicionar ao carrinho: "))
    quantidade = int(input("Digite a quantidade desejada: "))

    # Verificando se há estoque suficiente
    cursor.execute("SELECT qnt_estoque FROM Peca WHERE peca_id = %s", (id_peca,))
    result = cursor.fetchone()
    if not result or quantidade > result[0]:
        print("Não há estoque suficiente para essa peça.")
        return

    # Atualizando o estoque da peça
    cursor.execute("UPDATE Peca SET qnt_estoque = qnt_estoque - %s WHERE peca_id = %s", (quantidade, id_peca))
    mydb.commit()

    # Adicionando a peça ao carrinho do usuário
    cursor.execute("INSERT INTO ItemPedido (quantidade, id_peca) VALUES (%s, %s)", (quantidade, id_peca))
    mydb.commit()
    print("Peça adicionada ao carrinho.")

# Obtendo o ID do usuário (simulado, pode ser obtido de acordo com a sua implementação)
id_usuario = int(input("Digite o seu ID de usuário: "))

# Permitindo que o usuário adicione peças ao carrinho
adicionar_ao_carrinho(id_usuario)

# Fechando o cursor e a conexão
cursor.close()
mydb.close()
